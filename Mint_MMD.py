import pandas as pd
import plotly.express as px
import plotly.subplots as sp
import plotly.graph_objects as go
import streamlit as st
from math import ceil
import plotly.colors as pc

def render():
# ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡∏à‡∏≤‡∏Å dict
    st.header("‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏™‡πà‡∏á‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏Å‡∏©‡∏≤‡∏õ‡∏ì‡πå‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≠‡∏á‡∏Å‡∏©‡∏≤‡∏õ‡∏ì‡πå‡πÉ‡∏´‡πâ‡∏Å‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏£‡∏≤ ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 2568")
    months = ["‡∏ï.‡∏Ñ.67", "‡∏û.‡∏¢.67", "‡∏ò.‡∏Ñ.67", "‡∏°.‡∏Ñ.68", "‡∏Å.‡∏û.68", "‡∏°‡∏µ.‡∏Ñ.68"]
    data = {
        "‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤": [
            "10 ‡∏ö‡∏≤‡∏ó", "10 ‡∏ö‡∏≤‡∏ó‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "10 ‡∏ö‡∏≤‡∏ó (‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏•‡∏∂‡∏Å‡πÇ‡∏•‡∏´‡∏∞‡∏™‡∏≠‡∏á‡∏™‡∏µ)",
            "5 ‡∏ö‡∏≤‡∏ó  ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡πà‡∏≤", "5 ‡∏ö‡∏≤‡∏ó ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            "2 ‡∏ö‡∏≤‡∏ó ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡πà‡∏≤", "2 ‡∏ö‡∏≤‡∏ó ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            "1 ‡∏ö‡∏≤‡∏ó ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡πà‡∏≤", "1 ‡∏ö‡∏≤‡∏ó ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            "50 ‡∏™‡∏ï. ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡πà‡∏≤", "50 ‡∏™‡∏ï. ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            "25 ‡∏™‡∏ï. ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡πà‡∏≤", "25 ‡∏™‡∏ï. ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            "10 ‡∏™‡∏ï. ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡πà‡∏≤", "10 ‡∏™‡∏ï. ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            "5 ‡∏™‡∏ï. ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡πà‡∏≤", "5 ‡∏™‡∏ï. ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            "1 ‡∏™‡∏ï. ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡πà‡∏≤", "1 ‡∏™‡∏ï.  ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
        ],
        "‡∏ï.‡∏Ñ.67": [4060000, 0, 0, 6900000, 0, 1000000, 0, 4000000, 57000000, 0, 4200000, 0, 8640000, 0, 0, 0, 0, 0, 0],
        "‡∏û.‡∏¢.67": [1410000, 0, 0, 4800000, 0, 1000000, 0, 800000, 47200000, 0, 7820000, 0, 23240000, 0, 0, 0, 0, 0, 0],
        "‡∏ò.‡∏Ñ.67": [1620000, 0, 0, 3800000, 0, 650000, 0, 34900000, 16450000, 0, 7240000, 0, 17280000, 0, 0, 0, 0, 0, 0],
        "‡∏°.‡∏Ñ.68": [500000, 0, 0, 0, 0, 0, 0, 82000000, 0, 0, 2000000, 0, 8000000, 0, 0, 0, 0, 0, 0],
        "‡∏Å.‡∏û.68": [3070000, 0, 0, 6900000, 0, 330000, 0, 83700000, 0, 0, 8160000, 0, 18400000, 0, 0, 0, 0, 0, 0],
        "‡∏°‡∏µ.‡∏Ñ.68": [10940000, 0, 0, 16700000, 0, 50000, 0, 69100000, 0, 0, 4080000, 0, 9320000, 0, 0, 0, 0, 0, 0]
    }

    # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô DataFrame ‡πÅ‡∏•‡∏∞ melt ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô long format
    df = pd.DataFrame(data)
    df_melted = df.melt(id_vars="‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤", var_name="‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", value_name="‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï")

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á dummy entry ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡πÄ‡∏õ‡πá‡∏ô 0 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏ä‡∏ô‡∏¥‡∏î‡∏°‡∏µ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
    unique_coins = df_melted["‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤"].unique()
    full_index = pd.MultiIndex.from_product([unique_coins, months], names=["‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤", "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"])
    df_complete = df_melted.set_index(["‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤", "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"]).reindex(full_index, fill_value=0).reset_index()

    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 7 ‡∏ä‡∏ô‡∏¥‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    top_coins = df_complete.groupby("‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤")["‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï"].sum().nlargest(7).index.tolist()
    df_top = df_complete[df_complete["‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤"].isin(top_coins)]

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    df_top_display = df_top.copy()
    df_top_display["‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï"] = df_top_display["‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï"] / 1_000_000

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡πà‡∏≠‡∏ä‡∏ô‡∏¥‡∏î‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç
    color_sequence = pc.qualitative.Plotly[:len(top_coins)]
    color_map = dict(zip(top_coins, color_sequence))

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á facet bar chart ‡∏î‡πâ‡∏ß‡∏¢ Plotly Express
    fig = px.bar(
        df_top_display,
        x="‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
        y="‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï",
        facet_col="‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤",
        facet_col_wrap=3,
        color="‡∏ä‡∏ô‡∏¥‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤",
        color_discrete_map=color_map,
        title="üìå ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏™‡πà‡∏á‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏Å‡∏©‡∏≤‡∏õ‡∏ì‡πå‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≠‡∏á‡∏Å‡∏©‡∏≤‡∏õ‡∏ì‡πå‡πÉ‡∏´‡πâ‡∏Å‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏£‡∏≤ ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 2568",
        text=df_top_display["‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï"].map(lambda x: f"{x:,.2f}")
    )

    fig.update_traces(textposition="outside", textangle=0, cliponaxis=False)
    fig.update_layout(height=900, showlegend=False, yaxis_title="‡∏•‡πâ‡∏≤‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç", margin=dict(t=80),
                    grid=dict(rows=3, columns=3, pattern="independent"), 
                    annotations=[dict(yshift=-5) for _ in range(len(fig.layout.annotations))])
    fig.for_each_annotation(lambda a: a.update(text=a.text.split("=")[-1]))
    fig.update_xaxes(matches=None, showticklabels=True, categoryorder="array", categoryarray=months)

    st.plotly_chart(fig, use_container_width=True)

    with st.expander("üîç ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á", expanded=False):
        st.dataframe(df_top, use_container_width=True)
        st.download_button("üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (CSV)", df_top.to_csv(index=False).encode('utf-8-sig'), file_name="coin_production_top7.csv")
